hist(as.double(animation$imdb_score),
breaks=50,
main='Histogram of imdb scores of Animation movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/animationHistogram.png")
dev.off()
boxplot(data$imdb_score, xlab = "imdb scores")
ggsave(path = "../figures/expl/", filename = "imdbScoresBoxPlot.png", device = "png")
boxplot(data$gross, xlab = "gross income")
ggsave(path = "../figures/expl/", filename = "imdbGrossBoxPlot.png", device = "png")
boxplot(data$cast_total_facebook_likes, xlab = "total fb likes")
ggsave(path = "../figures/expl/", filename = "imdbFBLikes.png", device = "png")
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
library(dtplyr)
data %>%
summary_all() %>%
datatable()
install.packages("datatable")
library(stargazer)
library(stargazer)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
stargazer::stargazer(data)
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
kable(summary(data))
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
pandoc_version()
library(pander)
pander(summary(data))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
pander(str(data))
pander(str(data))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
str(data, width.cutoff = 50)
str(data, width.cutoff = 20)
str(data, width.cutoff = 3)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
dplyr::glimpse(str(data))
dplyr::glimpse(data)
dplyr::glimpse(data, width = 40)
dplyr::glimpse(data, width = 70)
dplyr::glimpse(data, width = 100)
dplyr::glimpse(data, width = 90)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
dplyr::glimpse(data, width = 90)
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
tinytex::pdflatex("FinalReport.Rmd")
tinytex::pdflatex("FinalReport.tex")
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
help(str)
str(data, nchar.max = 70)
str(data, width = 70)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
str(data, width = 50)
str(data, vec.len = 4)
str(data, width = 40, strict.width = "cut")
str(data, width = 70, strict.width = "cut")
str(data, width = 85, strict.width = "cut")
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
missing_values
pander(missing_values)
missing_values
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
pander(missing_values)
missing_values
glimpse(missing_values)
glimpse(missing_values)
table(missing_values)
data.frame(missing_values)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
print(missing_values)
print(missing_values, width = 5)
print(missing_values, width = 50)
print(missing_values, width = 70)
print(missing_values, width = 100)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
# Potrebno je koristiti drugačiju funkciju za spremanje jer ggsave ima
# neobjašnjivi problem s histogramima
hist(action$imdb_score,
breaks=30,
main="Histogram of imdb_score",
xlab="Scores")
dev.copy(png, file = "../figures/report/actionHistogram.png")
dev.off()
hist(as.double(drama$imdb_score),
breaks=50,
main='Histogram of imdb scores of Drama movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/dramaHistogram.png")
dev.off()
hist(as.double(romance$imdb_score),
breaks=50,
main='Histogram of imdb scores of Romance movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/romanceHistogram.png")
dev.off()
hist(as.double(comedy$imdb_score),
breaks=50,
main='Histogram of imdb scores of Romance movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/comedyHistogram.png")
dev.off()
hist(as.double(thriller$imdb_score),
breaks=50,
main='Histogram of imdb scores of Thriller movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/thrillerHistogram.png")
dev.off()
hist(as.double(horror$imdb_score),
breaks=50,
main='Histogram of imdb scores of Horror movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/horrorHistogram.png")
dev.off()
hist(as.double(animation$imdb_score),
breaks=50,
main='Histogram of imdb scores of Animation movies',
xlab='Scores')
dev.copy(png, file = "../figures/report/animationHistogram.png")
dev.off()
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
print(table(genresSplit), width = 100)
print(table(genresSplit), width = 500)
print(table(genresSplit), width = 50)
head(modifiedDataForFirst)
print(head(modifiedDataForFirst))
print(head(modifiedDataForFirst))
print(head(modifiedDataForFirst), width = 70)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
print(table(genresSplit), width = 80)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
source("../R/custom.R")
library(dplyr)
library(ggplot2)
library(tidyr)
library(pander)
load("data.RData")
pander(summary(data))
str(data, width = 85, strict.width = "cut")
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values, width = 100)
# Identificiramo duplikate na temelju imena filma
duplicate_rows <- duplicated(data, by = "movie_title")
# Izbacujemo duplikate iz originalnog seta podataka
data <- data[!duplicate_rows, ]
save(data, file = "data.RData")
## 1. Pitanje
modifiedDataForFirst <- data %>%
mutate(genres = strsplit(genres, "\\|")) %>%
tidyr::unnest(genres) %>%
filter(imdb_score != 0) %>%
filter(!is.na(imdb_score)) %>%
filter(genres == "Action" |
genres == "Comedy" |
genres == "Drama" |
genres == "Romance" |
genres == "Horror" |
genres == "Thriller" |
genres == "Animation")
# Na ovaj način rastavili smo filmove koji pripadaju u više od jedne kategorije
# i izbrisali retke koji nemaju ocjenu.
save(modifiedDataForFirst, file = "data.RData")
action <- subset(modifiedDataForFirst, genres == "Action")
save(action, file = "data.RData")
comedy <- subset(modifiedDataForFirst, genres == "Comedy")
save(comedy, file = "data.RData")
drama <- subset(modifiedDataForFirst, genres == "Drama")
save(drama, file = "data.RData")
romance <- subset(modifiedDataForFirst, genres == "Romance")
save(romance, file = "data.RData")
thriller <- subset(modifiedDataForFirst, genres == "Thriller")
save(thriller, file = "data.RData")
horror <- subset(modifiedDataForFirst, genres == "Horror")
save(horror, file = "data.RData")
animation <- subset(modifiedDataForFirst, genres == "Animation")
save(animation, file = "data.RData")
pander(head(modifiedDataForFirst), width = 70)
print
head(modifiedDataForFirst), width = 70
print(head(modifiedDataForFirst), width = 70)
kable(head(modifiedDataForFirst), width = 70)
modifiedDataForFirst[1]
modifiedDataForFirst[[1]]
modifiedDataForFirst[1,]
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
qqnorm(action$imdb_score)
qqnorm(drama$imdb_score)
qqnorm(action$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of Action movies")
qqnorm(action$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of ACTION movies")
qqnorm(action$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of ACTION movies")
dev.copy(png, file = "../figures/report/actionQQplot.png")
dev.off()
qqnorm(drama$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of DRAMA movies")
dev.copy(png, file = "../figures/report/dramaQQplot.png")
dev.off()
qqnorm(romance$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of ROMANCE movies")
dev.copy(png, file = "../figures/report/romanceQQplot.png")
dev.off()
qqnorm(comedy$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of COMEDY movies")
dev.copy(png, file = "../figures/report/comedyQQplot.png")
dev.off()
qqnorm(thriller$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of THRILLER movies")
dev.copy(png, file = "../figures/report/thrillerQQplot.png")
dev.off()
qqnorm(horror$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of HORROR movies")
dev.copy(png, file = "../figures/report/horrorQQplot.png")
dev.off()
qqnorm(animation$imdb_score, xlab = "Scores", main = "QQ plot of imdb scores of ANIMATION movies")
dev.copy(png, file = "../figures/report/animationQQplot.png")
dev.off()
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(xfun)
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
for (genre in unique(modifiedDataForFirst)) {
print(genre)
}
for (genre in unique(modifiedDataForFirst$genres)) {
print(genre)
}
for (genre in unique(modifiedDataForFirst$genres)) {
summary(modifiedDataForFirst[modifiedDataForFirst$genres == genre, ]])
for (genre in unique(modifiedDataForFirst$genres)) {
summary(modifiedDataForFirst[modifiedDataForFirst$genres == genre, ])
}
for (genre in unique(modifiedDataForFirst$genres)) {
a <- modifiedDataForFirst[modifiedDataForFirst$genres == genre, ]
print(summary(a))
}
for (genre in unique(modifiedDataForFirst$genres)) {
print(genre)
a <- modifiedDataForFirst[modifiedDataForFirst$genres == genre, ]
print(summary(a$imdb_score))
}
rmarkdown::render("FinalReport.Rmd",
output_file = "final_report.pdf",
params = list(child1 = "ucitavanje_podataka.Rmd",
child2 = "prilagodba_podataka.Rmd",
child3 = "prvi_zadatak.Rmd"))
