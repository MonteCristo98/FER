knitr::opts_chunk$set(echo = TRUE)
install.packages(nortest)
install.packages("nortest")
library(tidyverse)
library(tinytex)
#tinytex::install_tinytex()
library(tinytex)
IMDB <- read.csv("IMDB_1.csv", header=FALSE)
# it will remove first column (unique index - X)
IMDB = IMDB[-1,]
head(IMDB)
genresSplit = unlist(strsplit(IMDB$V10, "\\|"))
table(genresSplit)
library(tidyverse)
IMDB %>%
mutate(V10=strsplit(V10, "\\|")) %>%
unnest(V10)
library(tidyverse)
IMDB = IMDB %>%
mutate(V10=strsplit(V10, "\\|")) %>%
unnest(V10)
action <- subset(IMDB, V10 == "Action")
comedy <- subset(IMDB, V10 == "Comedy")
drama <- subset(IMDB, V10 == "Drama")
romance <- subset(IMDB, V10 == "Romance")
thriller <- subset(IMDB, V10 == "Thriller")
horror <- subset(IMDB, V10 == "Horror")
western <- subset(IMDB, V10 == "Western")
animation <- subset(IMDB, V10 == "Animation")
history <- subset(IMDB, V10 == "History")
documentary <- subset(IMDB, V10 == "Documentary")
hist(as.double(action$V26),
breaks=50,
main='Histogram of imdb scores of Action movies',
xlab='Scores')
hist(as.double(comedy$V26),
breaks=50,
main='Histogram of imdb scores of Comedy movies',
xlab='Scores')
hist(as.double(drama$V26),
breaks=50,
main='Histogram of imdb scores of Drama movies',
xlab='Scores')
hist(as.double(romance$V26),
breaks=50,
main='Histogram of imdb scores of Romance movies',
xlab='Scores')
hist(as.double(thriller$V26),
breaks=50,
main='Histogram of imdb scores of Thriller movies',
xlab='Scores')
hist(as.double(horror$V26),
breaks=50,
main='Histogram of imdb scores of Horror movies',
xlab='Scores')
hist(as.double(western$V26),
breaks=50,
main='Histogram of imdb scores of Western movies',
xlab='Scores')
hist(as.double(animation$V26),
breaks=50,
main='Histogram of imdb scores of Animation movies',
xlab='Scores')
hist(as.double(history$V26),
breaks=50,
main='Histogram of imdb scores of History movies',
xlab='Scores')
hist(as.double(documentary$V26),
breaks=50,
main='Histogram of imdb scores of Documentary movies',
xlab='Scores')
bIMDB <- subset(IMDB, V10 == 'Action' | V10 == 'Comedy' | V10 == 'Drama' | V10 == 'Romance' | V10 == 'Thriller' | V10 == 'Horror' | V10 == 'Western' | V10 == 'Animation' | V10 == 'History' | V10 == 'Documentary')
bartlett.test(V26 ~ V10, data = bIMDB)
var((IMDB$V26[IMDB$V10=='Action']))
var((IMDB$V26[IMDB$V10=='Comedy']))
var((IMDB$V26[IMDB$V10=='Drama']))
var((IMDB$V26[IMDB$V10=='Romance']))
var((IMDB$V26[IMDB$V10=='Thriller']))
var((IMDB$V26[IMDB$V10=='Horror']))
var((IMDB$V26[IMDB$V10=='Western']))
var((IMDB$V26[IMDB$V10=='Animation']))
var((IMDB$V26[IMDB$V10=='History']))
var((IMDB$V26[IMDB$V10=='Documentary']))
# Graficki prikaz podataka
boxplot(as.double(V26) ~ V10, data = bIMDB)
# Test
a = aov(V26 ~ V10, data = bIMDB)
summary(a)
IMDB <- read.csv("~/Downloads/IMDB.csv", header=FALSE)
anova_result <- aov(data, data$Neighborhood ~ data$TotalBsmtSF)
anova_result <- aov(dataFor2, data$Neighborhood ~ data$TotalBsmtSF)
head(data)
### 2. zadatak
#Ovisi li veliË‡cina podruma o kvartu u gradu?
data <- read.table("preprocessed_data.csv", header = T, sep = ',')
anova_result <- aov(data$Neighborhood ~ data$TotalBsmtSF)
head(data)
NeighborhoodSplit <- unlist(strsplit(data$Neighborhood, "\\|"))
table(NeighborhoodSplit)
dataForNSplit <- data.frame(NeighborhoodSplit)
dataForNSplit
table(NeighborhoodSplit)
table(NeighborhoodSplit[NeighborhoodSplit > 30])
table(NeighborhoodSplit[NeighborhoodSplit > 30])
table(NeighborhoodSplit)
NeighborhoodSplit
testing <- table(NeighborhoodSplit)
testing
testing[testing > 20]
testing[testing > 30]
dataFor2 <- data.frame(data$Neighborhood, data$TotalBsmtSF)
unlist(dataFor2$data.Neighborhood)
unlist(dataFor2$data.Neighborhood, dataFor2$data.TotalBsmtSF)
unnest(data$Neighborhood)
unnest(NeighborhoodSplit)
unnest(mutate(NeighborhoodSplit))
unnest(mutate(neigh = strsplit(NeighborhoodSplit, "\\|")))
testing[testing > 30]
BrkSide <- dataFor2[dataFor2$data.Neighborhood == "BrkSide "]
BrkSide
BrkSide <- data[data$Neighborhood == "BrkSide "]
BrkSide
BrkSide <- data[data$Neighborhood == "BrkSide"]
BrkSide <- data[data$Neighborhood == "BrkSide", ]
BrkSide
testing[testing > 30]
CollgCr <- data[data$Neighborhood == "CollgCr", ]
CollgCr
NeighborhoodSplit
testing[testing > 30]
for (i in (1:unique(testing))) {
print(i)
}
for (i in (1:unique(testing))) {
print(testing[i])
}
for (i in (1::unique(testing))) {
for (i in (1:unique(testing))) {
print(testing[i])
}
testing
for (i in (1:length(testing)) {
for (i in (1:length(testing))) {
print(testing[i])
}
for (i in (1:length(testing))) {
print(testing[i,])
}
for (i in (1:length(testing))) {
print(testing[i,1])
}
dim(testing)
for (i in (1:length(testing))) {
print(testing[i])
}
for (i in (1:length(testing))) {
print(testing[[i]])
}
testing[1]
unlist(testing)
unlist(testing[1])
unlist(testing[,1])
unlist(testing[1])
unlist(testing[1,1])
unlist(testing[1,])
unlist(testing[[1]])
unnest(testing[[1]])
unlist(testing[[1]])
testing[1]
testing[[1]]
testing[[0]]
testing[[2]]
for (i in (1:length(testing))) {
print(testing[[i]])
}
testing[2]
testing[2[1]]
testing[2[2]]
testing[2[0]]
testing[2[1]]
unlist(testing[[1]])
unlist(testing[1])
unlist(testing[1[1]])
unlist(testing[1[2]])
unlist(testing[1])
testing[testing > 30]
Gilb
Gilb
Gilbert <- subset(data, Neighborhood == "Gilbert")
Gilbert
testing <- table(NeighborhoodSplit, `colnames<-`c("hej", "gej"))
testing <- table(NeighborhoodSplit, `colnames<-`(hej,gej))
testing <- table(NeighborhoodSplit, `colnames<-`("hej","gej"))
testing[testing > 30]
summary(testing)
testing[testing > 30]
BrkSide <- subset(data, Neighborhood == "BrkSide")
CollgCr <- subset(data, Neighborhood == "CollgCr")
Crawfor <- subset(data, Neighborhood == "Crawfor")
Edwards <- subset(data, Neighborhood == "Edwards")
Gilbert <- subset(data, Neighborhood == "Gilbert")
IDOTRR <- subset(data, Neighborhood == "IDOTRR")
Mitchel <- subset(data, Neighborhood == "Mitchel")
NAmes <- subset(data, Neighborhood == "NAmes")
NoRidge <- subset(data, Neighborhood == "NoRidge")
NridgHt   <- subset(data, Neighborhood == "NridgHt")
NWAmes <- subset(data, Neighborhood == "NWAmes")
OldTown <- subset(data, Neighborhood == "OldTown")
Sawyer <- subset(data, Neighborhood == "Sawyer")
Somerst <- subset(data, Neighborhood == "Somerst")
SawyerW <- subset(data, Neighborhood == "SawyerW")
Timber <- subset(data, Neighborhood == "Timber")
print(testing[[i]])
for (i in (1:length(testing))) {
print(testing[[i]])
}
for (i in (1:length(testing))) {
print(testing)
}
class(testing)
dim(table)
dim(testing)
for (i in (1:length(testing))) {
print(testing)
}
for (i in (1:length(testing))) {
print(testing[i > 30])
}
for (i in (1:length(testing))) {
print(testing[[i > 30]])
}
print(testing)
dftesting <- data.frame(testing)
dftesting
testing <- data.frame(NeighborhoodSplit, `colnames<-`("hej","gej"))
testing <- data.frame(NeighborhoodSplit,)
testing <- data.frame(NeighborhoodSplit)
testing[testing > 30]
dftest
dftesting <- data.frame(testing)
dftest
dftesting
testing <- table(NeighborhoodSplit, `colnames<-`("hej","gej"))
testing <- table(NeighborhoodSplit)
testing[testing > 30]
dftesting
dftesting <- data.frame(testing)
dftesting
NeighborhoodSplit <- unlist(strsplit(data$Neighborhood, "\\|"))
testing <- table(NeighborhoodSplit)
testing[testing > 30]
dftesting <- data.frame(testing)
dftesting
NeighborhoodSplit <- unlist(strsplit(data$Neighborhood, "\\|"))
testing <- table(NeighborhoodSplit)
dftesting <- data.frame(testing[testing > 30])
dftesting
NeighborhoodSplit <- unlist(data$Neighborhood)
NeighborhoodSplit
testing <- table(NeighborhoodSplit)
dftesting <- data.frame(testing[testing > 30])
dftesting
NeighborhoodSplit <- data$Neighborhood
NeighborhoodSplit <- data$Neighborhood
NeighborhoodSplit
testing <- table(NeighborhoodSplit)
dftesting <- data.frame(testing[testing > 30])
dftesting
NeighborhoodSplit <- data$Neighborhood
testing <- table(NeighborhoodSplit)
dftesting <- data.frame(testing[testing > 30])
dftesting
testing <- table(data$Neighborhood, data$TotalBsmtSF)
dftesting <- data.frame(testing[testing > 30])
dftesting
testing <- table(data$Neighborhood, data$TotalBsmtSF)
testing
testing <- data.frame(data$Neighborhood, data$TotalBsmtSF)
testing
testing <- data.frame(data$Neighborhood, data$TotalBsmtSF)
testing
dftesting <- data.frame(testing[testing > 30])
dftesting
testing
testing <- table(data$Neighborhood, data$TotalBsmtSF)
testing
testing <- table(data$Neighborhood, sum(data$TotalBsmtSF))
testing <- table(unique(data$Neighborhood), sum(data$TotalBsmtSF))
group_by(data, data$Neighborhood)
sum(group_by(data, data$Neighborhood), data$TotalBsmtSF)
data$Neighborhood
testing <- table(data$Neighborhood, sum(data$TotalBsmtSF))
testing <- data.frame(data$Neighborhood,data$TotalBsmtSF)
testing
grouped_data <- data %>%
group_by(Neighborhood) %>%
summarized_data <- grouped_data %>%
summarize(mean_column2 = mean(TotalBsmtSF))
summarized_data <- data %>%
group_by(Neighborhood) %>%
summarize(mean_column2 = mean(TotalBsmtSF))
summarized_data
summarized_data <- data %>%
group_by(Neighborhood) %>% count > 30
summarize(mean_column2 = mean(TotalBsmtSF))
summarized_data <- data %>%
group_by(Neighborhood) %>% count > 30 %>%
summarize(mean_column2 = mean(TotalBsmtSF))
summarized_data <- data %>%
group_by(Neighborhood) %>%
summarize(mean_column2 = mean(TotalBsmtSF)) %>%
filter(mean_column2 > 20)
summarized_data
summarized_data <- data %>%
data$TotalBsmtSF > 1 %>%
group_by(Neighborhood) %>%
summarize(mean_column2 = mean(TotalBsmtSF)) %>%
filter(mean_column2 > 20)
summarized_data <- data %>%
TotalBsmtSF > 1 %>%
group_by(Neighborhood) %>%
summarize(mean_column2 = mean(TotalBsmtSF)) %>%
filter(mean_column2 > 20)
summarized_data <- data %>%
.$TotalBsmtSF > 1 %>%
group_by(Neighborhood) %>%
summarize(mean_column2 = mean(TotalBsmtSF)) %>%
filter(mean_column2 > 20)
summarized_data <- data %>%
filter(data$TotalBsmtSF > 1) %>%
group_by(Neighborhood) %>%
summarize(mean_column2 = mean(TotalBsmtSF)) %>%
filter(mean_column2 > 20)
summarized_data
library(dplyr)
library(tinytex)
